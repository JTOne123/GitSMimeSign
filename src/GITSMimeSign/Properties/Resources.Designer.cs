//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GitSMimeSign.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GitSMimeSign.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emails: {0}.
        /// </summary>
        internal static string EmailHeader {
            get {
                return ResourceManager.GetString("EmailHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID: {0}.
        /// </summary>
        internal static string IdHeader {
            get {
                return ResourceManager.GetString("IdHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing GitSMimeClient.
        /// </summary>
        internal static string InitializingApplication {
            get {
                return ResourceManager.GetString("InitializingApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must have a valid certificate.
        /// </summary>
        internal static string InvalidCertificate {
            get {
                return ResourceManager.GetString("InvalidCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate has unknown signature algorithm: .
        /// </summary>
        internal static string InvalidCertificateAlgorithm {
            get {
                return ResourceManager.GetString("InvalidCertificateAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify the ID for signing. Either a email address or the certificate ID..
        /// </summary>
        internal static string InvalidCertificateId {
            get {
                return ResourceManager.GetString("InvalidCertificateId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid option for --include-certs.
        /// </summary>
        internal static string InvalidCertificateMode {
            get {
                return ResourceManager.GetString("InvalidCertificateMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data on the stream doesn&apos;t match the required PEM format.
        /// </summary>
        internal static string InvalidPemEncoding {
            get {
                return ResourceManager.GetString("InvalidPemEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signed certificate Header/footer format mismatch: {0}/{1}.
        /// </summary>
        internal static string InvalidPemHeaderFooter {
            get {
                return ResourceManager.GetString("InvalidPemHeaderFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must have valid signing information. There is none in the signature..
        /// </summary>
        internal static string InvalidSigningInfo {
            get {
                return ResourceManager.GetString("InvalidSigningInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid boolean parameter passed to the Telemetry.Disable option..
        /// </summary>
        internal static string InvalidTelemtryValue {
            get {
                return ResourceManager.GetString("InvalidTelemtryValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp authority {0} command line parameter is not a valid URL..
        /// </summary>
        internal static string InvalidTimeAuthority {
            get {
                return ResourceManager.GetString("InvalidTimeAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp authority must be HTTP or HTTPS: .
        /// </summary>
        internal static string InvalidTimeAuthorityScheme {
            get {
                return ResourceManager.GetString("InvalidTimeAuthorityScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RFC3161 timestamp is invalid..
        /// </summary>
        internal static string InvalidTimestamp {
            get {
                return ResourceManager.GetString("InvalidTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The reply from the time stamp server was in a invalid format..
        /// </summary>
        internal static string InvalidTimestampReply {
            get {
                return ResourceManager.GetString("InvalidTimestampReply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timestamp authority is not a valid URL inside configuration file: .
        /// </summary>
        internal static string InvalidTimestampUriConfig {
            get {
                return ResourceManager.GetString("InvalidTimestampUriConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Issuer: {0}.
        /// </summary>
        internal static string IssuerHeader {
            get {
                return ResourceManager.GetString("IssuerHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not open key store..
        /// </summary>
        internal static string KeyStoreUnableToOpen {
            get {
                return ResourceManager.GetString("KeyStoreUnableToOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must have valid data to encrypt..
        /// </summary>
        internal static string NothingToEncrypt {
            get {
                return ResourceManager.GetString("NothingToEncrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to S/N: {0}.
        /// </summary>
        internal static string SerialNumberHeader {
            get {
                return ResourceManager.GetString("SerialNumberHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Signature Algorithm: {0}.
        /// </summary>
        internal static string SignatureAlgorithmHeader {
            get {
                return ResourceManager.GetString("SignatureAlgorithmHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StdIn has not been redirected..
        /// </summary>
        internal static string StdInNotRedirected {
            get {
                return ResourceManager.GetString("StdInNotRedirected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subject: {0}.
        /// </summary>
        internal static string SubjectHeader {
            get {
                return ResourceManager.GetString("SubjectHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We must have only one signer.
        /// </summary>
        internal static string TooManySignInfos {
            get {
                return ResourceManager.GetString("TooManySignInfos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown format contained within the PEM encoded text..
        /// </summary>
        internal static string UnknownPemFormat {
            get {
                return ResourceManager.GetString("UnknownPemFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must select a action. Pick from --list--keys, --sign or --verify..
        /// </summary>
        internal static string ValidCommandAction {
            get {
                return ResourceManager.GetString("ValidCommandAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validity: {0} - {1}.
        /// </summary>
        internal static string ValidityHeader {
            get {
                return ResourceManager.GetString("ValidityHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an issue getting the X509 store..
        /// </summary>
        internal static string X509StoreIssue {
            get {
                return ResourceManager.GetString("X509StoreIssue", resourceCulture);
            }
        }
    }
}
